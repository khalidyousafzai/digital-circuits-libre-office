%!PS-Adobe-3.0 EPSF-3.0
%%Creator: gEDA gschem 1.6.1-20100214-22-ga30f00b
%%CreationDate: Sun Aug 12 11:58:12 2012
%%Title: /home/khalid/Desktop/digitalLogicDesign/gschemFigures/figChapter7/figPAL8input8output.sch
%%Author: (null)
%%BoundingBox: 0 0 1778 1080
%%Orientation: Portrait
%%Pages: 1
%%Endcomments
%%BeginProlog
% Prolog for gEDA, define all the functions needed for rendering
% schematics on Postscript devices


% Draw a line from the second coordinate to the first
% x2 y2 x1 y1 width line -
/line {
    setlinewidth
    % pop off first element and moveto
    moveto
    % pop off remaining elements and draw a line segment
    lineto
    % draw it
    stroke
} bind def


% Draw a dot
% x y r dot -
/dot {
    0 360 arc fill
} bind def

% Draw a dot-dashed line, a bunch of lined segments,
% if the array element only has length two, draw a dot.
% [ [x2 y2 x1 y1] [x4 y4 x3 y3] [x5 y5] ... ] width dashed -
/width 0 def
/dashed {
    dup 2.0 div /width exch def
    setlinewidth
    % pop off each line segment and draw it as a dot or as a line
    {
	aload length 2 gt
	{ moveto lineto stroke}
	{ width dot } ifelse
    } forall
} bind def

% Draw an arc segment
% x y r ang1 ang2 width darc -
/darc {
    setlinewidth
    arc stroke
} bind def

% Draw a series of arc segment bits, if the array element only has a single
% element in it, draw a dot.
% [ [sa1 ea1] [sa2 ea2] ... ] x y r width dashedarc -
/x 0 def
/y 0 def
/dashedarc {
    dup /width exch def
    setlinewidth
    /r exch def  
    /y exch def
    /x exch def
    { aload length 1 gt
	{
	    % this element had two angles in it
	    % extract start and stop angles
	    x y r   % drop x y and r onto stack
		    % at this point we have: sa ea x y r
		    % we need                      x y r sa ea
		    % so..
	    5 -2 roll
	    % and add it to the current path, and draw it
	    arc stroke
	} {
	    % this element only had one angle in it, place a
	    % filled dot at the appropriate place
	    % compute center point of the arc using the angle
	    % that is on the top of the stack
	    dup   		% angle angle
	    cos r mul x add 	% angle x
	    exch		% x angle
	    sin r mul y add	% x y
	    width		% x y width/2
	    dot			% draw the dot
	} ifelse
    } forall

    % Now draw it
    stroke
} bind def

% Draw a box
% width height x y linethickness box -
/box {
    setlinewidth
    moveto
    exch dup 0 rlineto	 % w h, h w w 0      -- Draw bottom line
    exch 0 exch rlineto	 % h w, w h 0, w 0 h -- Draw right line 
    neg 0 rlineto	 % w, -w 0           -- Draw Top line
    closepath		 % finish and draw it
    stroke
} bind def			     

% Draw a filled box
% width height x y fbox -
/fbox {
    moveto
    exch dup 0 rlineto	
    exch 0 exch rlineto	
    neg 0 rlineto		
    closepath			
    fill			
} bind def

% Font reincoding utilities

% ISOLatin1Encoding, extended with remaining uncoded glyphs
/ISOLatin1Extended [
    /.notdef /Lslash /lslash /OE /oe /Scaron /scaron /Zcaron /zcaron
    /Ydieresis /trademark /bullet /dagger /daggerdbl /ellipsis /emdash
    /endash /fi /fl /florin /fraction /guilsinglleft /guilsinglright
    /perthousand /quotedblbase /quotedblleft /quotedblright
    /quotesinglbase /quotesingle /.notdef /.notdef /.notdef /space
    /exclam /quotedbl /numbersign /dollar /percent /ampersand
    /quoteright /parenleft /parenright /asterisk /plus /comma /minus
    /period /slash /zero /one /two /three /four /five /six /seven /eight
    /nine /colon /semicolon /less /equal /greater /question /at /A /B /C
    /D /E /F /G /H /I /J /K /L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z
    /bracketleft /backslash /bracketright /asciicircum /underscore
    /quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o /p /q /r /s
    /t /u /v /w /x /y /z /braceleft /bar /braceright /asciitilde
    /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
    /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
    /.notdef /.notdef /.notdef /dotlessi /grave /acute /circumflex
    /tilde /macron /breve /dotaccent /dieresis /.notdef /ring /cedilla
    /.notdef /hungarumlaut /ogonek /caron /space /exclamdown /cent
    /sterling /currency /yen /brokenbar /section /dieresis /copyright
    /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron
    /degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph
    /periodcentered /cedilla /onesuperior /ordmasculine /guillemotright
    /onequarter /onehalf /threequarters /questiondown /Agrave /Aacute
    /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla /Egrave /Eacute
    /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis /Eth
    /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
    /Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn
    /germandbls /agrave /aacute /acircumflex /atilde /adieresis /aring
    /ae /ccedilla /egrave /eacute /ecircumflex /edieresis /igrave
    /iacute /icircumflex /idieresis /eth /ntilde /ograve /oacute
    /ocircumflex /otilde /odieresis /divide /oslash /ugrave /uacute
    /ucircumflex /udieresis /yacute /thorn /ydieresis
] def

% `new-font-name' `encoding-vector' `old-font-name' RE -
/RE {
    findfont
    dup maxlength dict begin {
        1 index /FID ne { def } { pop pop } ifelse
    } forall
    /Encoding exch def
    dup /FontName exch def
    currentdict end definefont pop
} bind def

% Text handling functions, select the font and scale it, then we need
% only to apply the appropriate transformations to get the text
% justified into the right spots.  The bad thing here is that we don't
% do any kerning, so the output may look a bit strange.

% compute the height of one character and return lly and ury
% (char) charheight lly ury
/charheight {
    gsave			% push graphics state
	newpath			% clear current path
	0 0 moveto		% Set current point
	false charpath		% get path
	flattenpath		% flatten path
	pathbbox		% stack = llx lly urx ury
	exch pop		% stack = llx lly ury
	3 -1 roll pop		% stack = lly ury
    grestore			% pop graphics state
} bind def

% compute the height of a string, one character at a time
% (string) stringheight lly ury
/lly 0.0 def
/ury 0.0 def

/stringheight {
    /lly 0.0 def			% initial value of heightmin
    /ury 0.0 def			% initial value of heightmax
    {				% work through string
	( ) dup 0 4 -1 roll put	% create one character string
	charheight		% measure it's height
	dup ury gt {		% if ury gt heightmax
	    /ury exch def	% update with new value
	} {
	    pop			% else discard ury
	} ifelse
	dup lly lt {		% if lly lt heightmin
	    /lly exch def	% update with new value
	} {
	    pop			% else discard lly
	} ifelse
    } forall
    lly ury			% Return the results
} bind def

% calculate the string width taking into account the escapes.
/mystrx 0.0 def
/mystry 0.0 def
/mystresc false def

/mystringwidth {
    /mystrx 0.0 def
    /mystry 0.0 def
    /mystresc false def
    {				% work through string
	% did we process the escape character last?
	mystresc {
	    % last character was escape
	    % handle the escape
	    % is it an _ = 95?
	    dup 95 eq {
		pop  % we don't need the character anymore
		% toggle drawing overbars
		0.0 0.0 % make it like it never happened...
	    } {
		% otherwise measure the character 
		(\\ ) dup 1 4 -1 roll put % count a \ and the character
		stringwidth
	    } ifelse
	    % and reset the flag
	    /mystresc false def
	} {
	    % last character was not escape
	    % is this escape
	    dup 92 eq {
		% yes, escape character, set flag
		/mystresc true def
		pop % drop character
		0.0 0.0 % make like this character has no width and height
	    } {
		( ) dup 0 4 -1 roll put	% create one character string
		stringwidth		% measure it's height/width
	    } ifelse
	} ifelse
	% accumulate x and y movements
	mystry add /mystry exch def
	mystrx add /mystrx exch def
    } forall
    mystrx mystry % drop results on stack
} bind def

% Render a string with overbars
%
/escaped false def
/drawoverbar false def
/fontsize 0.0 def

%string1 string2 append -
/append {
    2 copy length exch length add % find new length
    string dup % string1 string2 string string
    4 2 roll % string string string1 string2
    2 index 0 3 index
    % string string string1 string2 string 0 string1
    putinterval % string string string1 string2
    exch length exch putinterval
} bind def

% If drawoverbar is set, draw a line of the same length as the given string
% string overbarshowline -
/overbarshowline {
    % print overbar if necessary
    stringwidth pop 0
    drawoverbar {
        rlineto
        gsave stroke grestore
    } {
        rmoveto
    } ifelse
} bind def

% Draws overbars for the given string, then shows the string itself
% string overbarshow
/overbarshow {
    /overbarshowacc () def
    /overbarshowtxt () def

    gsave
    fontsize 10.0 div setlinewidth
    0 fontsize rmoveto  % move to (0,overbarheight)

    {				% work through string
	escaped {
	    % the last character was the escape
	    % handle the escape
	    % is it an _ = 95?
	    dup 95 eq {
		pop  % we don't need the character anymore
                overbarshowacc overbarshowline
                % toggle drawing overbars
		/drawoverbar drawoverbar not def

                % Append the contents off the accumulator to the text
                % string we're eventually going to show
                /overbarshowtxt overbarshowtxt overbarshowacc append def

                % clear accumulator
                /overbarshowacc () def
	    } {
                % add to accumulator
                (\\ ) dup 1 4 -1 roll put
                overbarshowacc exch append
                /overbarshowacc exch def
	    } ifelse
	    % and reset the flag
	    /escaped false def
	} {
	    % check for escape character \ = 92
	    dup 92 eq {
		% yes, escape character, set flag
		/escaped true def
		pop % drop character
	    } {
                % add to accumulator
                ( ) dup 0 4 -1 roll put
                overbarshowacc exch append
                /overbarshowacc exch def
	    } ifelse
	} ifelse
    } forall
    % Catch any leftovers
    overbarshowacc overbarshowline
    overbarshowtxt overbarshowacc append

    grestore
    show
} bind def

% 
% hcenter rjustify vcenter vjustify spacing [(line1) (line2) ... ] rot x y size text -
/stringw 0.0 def
/stringh 0.0 def
/spacing 0.0 def
/strings [ ] def
/stringtxt ( ) def
/stringcount 0 def
/rot 0.0 def

/text {
    gsave	        % save state for later
    /drawoverbar false def      % start by not drawing overbars

    dup /fontsize exch def  % save font size for corrections later
    % do font selection 
    /gEDAFont findfont
    exch scalefont
    setfont

    % set up coordinates
    translate           % move origin to given point
    rotate		% rotate so that text is drawn
    0 0 moveto
    dup length /stringcount exch def			% Get number of strings
    /strings exch def     				% save strings
    /spacing exch def
    % do we have more than 1 string to render?
    stringcount 1 eq {
	/stringtxt strings aload pop def		% get the string 
	/stringw stringtxt mystringwidth pop neg def	% get the -width
	/stringh stringtxt stringheight exch pop neg def% get the -height

	% First do vertical calculations
	% hcenter rjustify vcenter vjustify 
	% vertical justification
	{ 0 stringh rmoveto } if 
	% vertical center
	{ 0 stringh 0.3571425 mul rmoveto } if  % not 0.5, so that
						% it looks nicer
	% Then do horizontal calculations
	% right justify
	{ stringw 0 rmoveto } if
	% center
	{ stringw 2.0 div 0 rmoveto } if
	% Draw the text
	stringtxt overbarshow
    } {
	% More than one line, compute bounding box for the text

	% vertical height, don't use the actual hieght of the characters
	% assume that the user wants to make the baselines line up with two
	% text boxes placed side by side
	/stringh stringcount spacing mul neg def
	% Now figure out horizontal size, this amounts to keeping track
	% of the longest string
	/stringw 0.0 def
	strings {
	    mystringwidth pop
	    dup stringw gt {
		/stringw exch def
	    } {
		pop
	    } ifelse
	} forall
	/stringw stringw neg def 	% get the -width
	
	% First do vertical calculations
	% hcenter rjustify vcenter vjustify 
	% vertical justification
	{ 0 stringh fontsize add rmoveto } if 
	% vertical center
	{ 0 stringh 0.5 mul rmoveto } if 
	% Then do horizontal calculations
	% right justify
	{ stringw 0 rmoveto } if
	% center
	{ stringw 2.0 div 0 rmoveto } if
	% now move up to the first line and begin rendering
	0 stringcount 1 sub spacing mul rmoveto
	strings {
	    gsave		% Save starting point
	    overbarshow		% render the text
	    grestore
	    0 spacing neg rmoveto
	} forall
    } ifelse
    grestore 	% Restore old state
} bind def


%%EndProlog
%%Page: 1 1
/gEDAFont ISOLatin1Extended /Helvetica RE
2 setlinecap
0.072000 0.072000 scale
0 0 translate
1.000000 1.000000 scale
-36800 -43900 translate
gsave
38100 56400 38600 56100 10 line
38600 56100 38100 55800 10 line
38100 56400 38100 56100 10 line
38100 56100 38100 55800 10 line
38350 56300 45 0 360 10 darc
38600 56300 38395 56300 10 line
38600 55900 38275 55900 10 line
37800 56100 38100 56100 10 line
grestore
gsave
38100 55600 38600 55300 10 line
38600 55300 38100 55000 10 line
38100 55600 38100 55300 10 line
38100 55300 38100 55000 10 line
38350 55500 45 0 360 10 darc
38600 55500 38395 55500 10 line
38600 55100 38275 55100 10 line
37800 55300 38100 55300 10 line
grestore
gsave
38100 54800 38600 54500 10 line
38600 54500 38100 54200 10 line
38100 54800 38100 54500 10 line
38100 54500 38100 54200 10 line
38350 54700 45 0 360 10 darc
38600 54700 38395 54700 10 line
38600 54300 38275 54300 10 line
37800 54500 38100 54500 10 line
grestore
gsave
38100 57100 38600 56800 10 line
38600 56800 38100 56500 10 line
38100 57100 38100 56800 10 line
38100 56800 38100 56500 10 line
38350 57000 45 0 360 10 darc
38600 57000 38395 57000 10 line
38600 56600 38275 56600 10 line
37800 56800 38100 56800 10 line
grestore
38600 54300 60500 54300 10 line
38600 54700 60500 54700 10 line
38600 55100 60500 55100 10 line
38600 55500 60500 55500 10 line
38600 55900 60500 55900 10 line
38600 56300 60500 56300 10 line
38600 56600 60500 56600 10 line
38600 57000 60500 57000 10 line
gsave
60000 48500 60000 48200 10 line
60000 47500 60000 47200 10 line
59700 48200 60300 48200 10 line
60300 48200 60300 47800 10 line
59700 48200 59700 47800 10 line
60000 47800 300 180 360 10 darc
grestore
gsave
59300 48500 59300 48200 10 line
59300 47500 59300 47200 10 line
59000 48200 59600 48200 10 line
59600 48200 59600 47800 10 line
59000 48200 59000 47800 10 line
59300 47800 300 180 360 10 darc
grestore
gsave
58600 48500 58600 48200 10 line
58600 47500 58600 47200 10 line
58300 48200 58900 48200 10 line
58900 48200 58900 47800 10 line
58300 48200 58300 47800 10 line
58600 47800 300 180 360 10 darc
grestore
gsave
59300 45600 59300 45900 10 line
59300 46900 59300 46600 10 line
59300 46864 400 222 319 10 darc
59000 46600 59000 46300 10 line
59600 46600 59600 46300 10 line
59400 46300 400 180 256 10 darc
59200 46300 400 284 360 10 darc
59700 46900 59700 46600 10 line
58900 46900 58900 46600 10 line
59600 46600 59800 46600 10 line
58800 46600 59000 46600 10 line
grestore
59300 46900 59300 47200 10 line
60000 47200 60000 47000 10 line
60000 47000 59700 47000 10 line
59700 47000 59700 46900 10 line
58600 47200 58600 47000 10 line
58600 47000 58900 47000 10 line
58900 47000 58900 46900 10 line
60000 48500 60000 57400 10 line
59300 48500 59300 57400 10 line
58600 48500 58600 57400 10 line
gsave
57500 48500 57500 48200 10 line
57500 47500 57500 47200 10 line
57200 48200 57800 48200 10 line
57800 48200 57800 47800 10 line
57200 48200 57200 47800 10 line
57500 47800 300 180 360 10 darc
grestore
gsave
56800 48500 56800 48200 10 line
56800 47500 56800 47200 10 line
56500 48200 57100 48200 10 line
57100 48200 57100 47800 10 line
56500 48200 56500 47800 10 line
56800 47800 300 180 360 10 darc
grestore
gsave
56100 48500 56100 48200 10 line
56100 47500 56100 47200 10 line
55800 48200 56400 48200 10 line
56400 48200 56400 47800 10 line
55800 48200 55800 47800 10 line
56100 47800 300 180 360 10 darc
grestore
gsave
56800 45600 56800 45900 10 line
56800 46900 56800 46600 10 line
56800 46864 400 222 319 10 darc
56500 46600 56500 46300 10 line
57100 46600 57100 46300 10 line
56900 46300 400 180 256 10 darc
56700 46300 400 284 360 10 darc
57200 46900 57200 46600 10 line
56400 46900 56400 46600 10 line
57100 46600 57300 46600 10 line
56300 46600 56500 46600 10 line
grestore
56800 46900 56800 47200 10 line
57500 47200 57500 47000 10 line
57500 47000 57200 47000 10 line
57200 47000 57200 46900 10 line
56100 47200 56100 47000 10 line
56100 47000 56400 47000 10 line
56400 47000 56400 46900 10 line
57500 48500 57500 57400 10 line
56800 48500 56800 57400 10 line
56100 48500 56100 57400 10 line
gsave
55000 48500 55000 48200 10 line
55000 47500 55000 47200 10 line
54700 48200 55300 48200 10 line
55300 48200 55300 47800 10 line
54700 48200 54700 47800 10 line
55000 47800 300 180 360 10 darc
grestore
gsave
54300 48500 54300 48200 10 line
54300 47500 54300 47200 10 line
54000 48200 54600 48200 10 line
54600 48200 54600 47800 10 line
54000 48200 54000 47800 10 line
54300 47800 300 180 360 10 darc
grestore
gsave
53600 48500 53600 48200 10 line
53600 47500 53600 47200 10 line
53300 48200 53900 48200 10 line
53900 48200 53900 47800 10 line
53300 48200 53300 47800 10 line
53600 47800 300 180 360 10 darc
grestore
gsave
54300 45600 54300 45900 10 line
54300 46900 54300 46600 10 line
54300 46864 400 222 319 10 darc
54000 46600 54000 46300 10 line
54600 46600 54600 46300 10 line
54400 46300 400 180 256 10 darc
54200 46300 400 284 360 10 darc
54700 46900 54700 46600 10 line
53900 46900 53900 46600 10 line
54600 46600 54800 46600 10 line
53800 46600 54000 46600 10 line
grestore
54300 46900 54300 47200 10 line
55000 47200 55000 47000 10 line
55000 47000 54700 47000 10 line
54700 47000 54700 46900 10 line
53600 47200 53600 47000 10 line
53600 47000 53900 47000 10 line
53900 47000 53900 46900 10 line
55000 48500 55000 57400 10 line
54300 48500 54300 57400 10 line
53600 48500 53600 57400 10 line
37500 56800 37800 56800 10 line
gsave
false false false false 260.000000 [(A7) ] 0 37200 56800 180.555557 text
grestore
37500 56100 37800 56100 10 line
gsave
false false false false 260.000000 [(A6) ] 0 37200 56100 180.555557 text
grestore
37500 55300 37800 55300 10 line
gsave
false false false false 260.000000 [(A5) ] 0 37200 55300 180.555557 text
grestore
37500 54500 37800 54500 10 line
gsave
false false false false 260.000000 [(A4) ] 0 37200 54500 180.555557 text
grestore
59300 44500 59300 45600 10 line
gsave
false false false false 260.000000 [(F0) ] 0 59200 44200 180.555557 text
grestore
56800 44500 56800 45600 10 line
gsave
false false false false 260.000000 [(F1) ] 0 56700 44200 180.555557 text
grestore
54300 44500 54300 45600 10 line
gsave
false false false false 260.000000 [(F2) ] 0 54200 44200 180.555557 text
grestore
gsave
39100 50900 39600 50600 10 line
39600 50600 39100 50300 10 line
39100 50900 39100 50600 10 line
39100 50600 39100 50300 10 line
39350 50800 45 0 360 10 darc
39600 50800 39395 50800 10 line
39600 50400 39275 50400 10 line
38800 50600 39100 50600 10 line
grestore
gsave
52500 48500 52500 48200 10 line
52500 47500 52500 47200 10 line
52200 48200 52800 48200 10 line
52800 48200 52800 47800 10 line
52200 48200 52200 47800 10 line
52500 47800 300 180 360 10 darc
grestore
gsave
51800 48500 51800 48200 10 line
51800 47500 51800 47200 10 line
51500 48200 52100 48200 10 line
52100 48200 52100 47800 10 line
51500 48200 51500 47800 10 line
51800 47800 300 180 360 10 darc
grestore
gsave
51100 48500 51100 48200 10 line
51100 47500 51100 47200 10 line
50800 48200 51400 48200 10 line
51400 48200 51400 47800 10 line
50800 48200 50800 47800 10 line
51100 47800 300 180 360 10 darc
grestore
gsave
51800 45600 51800 45900 10 line
51800 46900 51800 46600 10 line
51800 46864 400 222 319 10 darc
51500 46600 51500 46300 10 line
52100 46600 52100 46300 10 line
51900 46300 400 180 256 10 darc
51700 46300 400 284 360 10 darc
52200 46900 52200 46600 10 line
51400 46900 51400 46600 10 line
52100 46600 52300 46600 10 line
51300 46600 51500 46600 10 line
grestore
51800 46900 51800 47200 10 line
52500 47200 52500 47000 10 line
52500 47000 52200 47000 10 line
52200 47000 52200 46900 10 line
51100 47200 51100 47000 10 line
51100 47000 51400 47000 10 line
51400 47000 51400 46900 10 line
52500 48500 52500 57400 10 line
51800 48500 51800 57400 10 line
51100 48500 51100 57400 10 line
gsave
50000 48500 50000 48200 10 line
50000 47500 50000 47200 10 line
49700 48200 50300 48200 10 line
50300 48200 50300 47800 10 line
49700 48200 49700 47800 10 line
50000 47800 300 180 360 10 darc
grestore
gsave
49300 48500 49300 48200 10 line
49300 47500 49300 47200 10 line
49000 48200 49600 48200 10 line
49600 48200 49600 47800 10 line
49000 48200 49000 47800 10 line
49300 47800 300 180 360 10 darc
grestore
gsave
48600 48500 48600 48200 10 line
48600 47500 48600 47200 10 line
48300 48200 48900 48200 10 line
48900 48200 48900 47800 10 line
48300 48200 48300 47800 10 line
48600 47800 300 180 360 10 darc
grestore
gsave
49300 45600 49300 45900 10 line
49300 46900 49300 46600 10 line
49300 46864 400 222 319 10 darc
49000 46600 49000 46300 10 line
49600 46600 49600 46300 10 line
49400 46300 400 180 256 10 darc
49200 46300 400 284 360 10 darc
49700 46900 49700 46600 10 line
48900 46900 48900 46600 10 line
49600 46600 49800 46600 10 line
48800 46600 49000 46600 10 line
grestore
49300 46900 49300 47200 10 line
50000 47200 50000 47000 10 line
50000 47000 49700 47000 10 line
49700 47000 49700 46900 10 line
48600 47200 48600 47000 10 line
48600 47000 48900 47000 10 line
48900 47000 48900 46900 10 line
50000 48500 50000 57400 10 line
49300 48500 49300 57400 10 line
48600 48500 48600 57400 10 line
gsave
47500 48500 47500 48200 10 line
47500 47500 47500 47200 10 line
47200 48200 47800 48200 10 line
47800 48200 47800 47800 10 line
47200 48200 47200 47800 10 line
47500 47800 300 180 360 10 darc
grestore
gsave
46800 48500 46800 48200 10 line
46800 47500 46800 47200 10 line
46500 48200 47100 48200 10 line
47100 48200 47100 47800 10 line
46500 48200 46500 47800 10 line
46800 47800 300 180 360 10 darc
grestore
gsave
46100 48500 46100 48200 10 line
46100 47500 46100 47200 10 line
45800 48200 46400 48200 10 line
46400 48200 46400 47800 10 line
45800 48200 45800 47800 10 line
46100 47800 300 180 360 10 darc
grestore
gsave
46800 45600 46800 45900 10 line
46800 46900 46800 46600 10 line
46800 46864 400 222 319 10 darc
46500 46600 46500 46300 10 line
47100 46600 47100 46300 10 line
46900 46300 400 180 256 10 darc
46700 46300 400 284 360 10 darc
47200 46900 47200 46600 10 line
46400 46900 46400 46600 10 line
47100 46600 47300 46600 10 line
46300 46600 46500 46600 10 line
grestore
46800 46900 46800 47200 10 line
47500 47200 47500 47000 10 line
47500 47000 47200 47000 10 line
47200 47000 47200 46900 10 line
46100 47200 46100 47000 10 line
46100 47000 46400 47000 10 line
46400 47000 46400 46900 10 line
47500 48500 47500 57400 10 line
46800 48500 46800 57400 10 line
46100 48500 46100 57400 10 line
51800 44500 51800 45600 10 line
gsave
false false false false 260.000000 [(F3) ] 0 51700 44200 180.555557 text
grestore
49300 44500 49300 45600 10 line
gsave
false false false false 260.000000 [(F4) ] 0 49200 44200 180.555557 text
grestore
46800 44500 46800 45600 10 line
gsave
false false false false 260.000000 [(F5) ] 0 46700 44200 180.555557 text
grestore
gsave
45000 48500 45000 48200 10 line
45000 47500 45000 47200 10 line
44700 48200 45300 48200 10 line
45300 48200 45300 47800 10 line
44700 48200 44700 47800 10 line
45000 47800 300 180 360 10 darc
grestore
gsave
44300 48500 44300 48200 10 line
44300 47500 44300 47200 10 line
44000 48200 44600 48200 10 line
44600 48200 44600 47800 10 line
44000 48200 44000 47800 10 line
44300 47800 300 180 360 10 darc
grestore
gsave
43600 48500 43600 48200 10 line
43600 47500 43600 47200 10 line
43300 48200 43900 48200 10 line
43900 48200 43900 47800 10 line
43300 48200 43300 47800 10 line
43600 47800 300 180 360 10 darc
grestore
gsave
44300 45600 44300 45900 10 line
44300 46900 44300 46600 10 line
44300 46864 400 222 319 10 darc
44000 46600 44000 46300 10 line
44600 46600 44600 46300 10 line
44400 46300 400 180 256 10 darc
44200 46300 400 284 360 10 darc
44700 46900 44700 46600 10 line
43900 46900 43900 46600 10 line
44600 46600 44800 46600 10 line
43800 46600 44000 46600 10 line
grestore
44300 46900 44300 47200 10 line
45000 47200 45000 47000 10 line
45000 47000 44700 47000 10 line
44700 47000 44700 46900 10 line
43600 47200 43600 47000 10 line
43600 47000 43900 47000 10 line
43900 47000 43900 46900 10 line
45000 48500 45000 57400 10 line
44300 48500 44300 57400 10 line
43600 48500 43600 57400 10 line
gsave
42500 48500 42500 48200 10 line
42500 47500 42500 47200 10 line
42200 48200 42800 48200 10 line
42800 48200 42800 47800 10 line
42200 48200 42200 47800 10 line
42500 47800 300 180 360 10 darc
grestore
gsave
41800 48500 41800 48200 10 line
41800 47500 41800 47200 10 line
41500 48200 42100 48200 10 line
42100 48200 42100 47800 10 line
41500 48200 41500 47800 10 line
41800 47800 300 180 360 10 darc
grestore
gsave
41100 48500 41100 48200 10 line
41100 47500 41100 47200 10 line
40800 48200 41400 48200 10 line
41400 48200 41400 47800 10 line
40800 48200 40800 47800 10 line
41100 47800 300 180 360 10 darc
grestore
gsave
41800 45600 41800 45900 10 line
41800 46900 41800 46600 10 line
41800 46864 400 222 319 10 darc
41500 46600 41500 46300 10 line
42100 46600 42100 46300 10 line
41900 46300 400 180 256 10 darc
41700 46300 400 284 360 10 darc
42200 46900 42200 46600 10 line
41400 46900 41400 46600 10 line
42100 46600 42300 46600 10 line
41300 46600 41500 46600 10 line
grestore
41800 46900 41800 47200 10 line
42500 47200 42500 47000 10 line
42500 47000 42200 47000 10 line
42200 47000 42200 46900 10 line
41100 47200 41100 47000 10 line
41100 47000 41400 47000 10 line
41400 47000 41400 46900 10 line
42500 48500 42500 57400 10 line
41800 48500 41800 57400 10 line
41100 48500 41100 57400 10 line
44300 44500 44300 45600 10 line
gsave
false false false false 260.000000 [(F6) ] 0 44200 44200 180.555557 text
grestore
41800 44500 41800 45600 10 line
gsave
false false false false 260.000000 [(F7) ] 0 41700 44200 180.555557 text
grestore
gsave
38100 53300 38600 53000 10 line
38600 53000 38100 52700 10 line
38100 53300 38100 53000 10 line
38100 53000 38100 52700 10 line
38350 53200 45 0 360 10 darc
38600 53200 38395 53200 10 line
38600 52800 38275 52800 10 line
37800 53000 38100 53000 10 line
grestore
gsave
38100 52500 38600 52200 10 line
38600 52200 38100 51900 10 line
38100 52500 38100 52200 10 line
38100 52200 38100 51900 10 line
38350 52400 45 0 360 10 darc
38600 52400 38395 52400 10 line
38600 52000 38275 52000 10 line
37800 52200 38100 52200 10 line
grestore
gsave
38100 51700 38600 51400 10 line
38600 51400 38100 51100 10 line
38100 51700 38100 51400 10 line
38100 51400 38100 51100 10 line
38350 51600 45 0 360 10 darc
38600 51600 38395 51600 10 line
38600 51200 38275 51200 10 line
37800 51400 38100 51400 10 line
grestore
gsave
38100 54000 38600 53700 10 line
38600 53700 38100 53400 10 line
38100 54000 38100 53700 10 line
38100 53700 38100 53400 10 line
38350 53900 45 0 360 10 darc
38600 53900 38395 53900 10 line
38600 53500 38275 53500 10 line
37800 53700 38100 53700 10 line
grestore
38600 51200 60500 51200 10 line
38600 51600 60500 51600 10 line
38600 52000 60500 52000 10 line
38600 52400 60500 52400 10 line
38600 52800 60500 52800 10 line
38600 53200 60500 53200 10 line
38600 53500 60500 53500 10 line
38600 53900 60500 53900 10 line
37500 53700 37800 53700 10 line
gsave
false false false false 260.000000 [(A3) ] 0 37200 53700 180.555557 text
grestore
37500 53000 37800 53000 10 line
gsave
false false false false 260.000000 [(A2) ] 0 37200 53000 180.555557 text
grestore
37500 52200 37800 52200 10 line
gsave
false false false false 260.000000 [(A1) ] 0 37200 52200 180.555557 text
grestore
37500 51400 37800 51400 10 line
gsave
false false false false 260.000000 [(A0) ] 0 37200 51400 180.555557 text
grestore
gsave
39100 50100 39600 49800 10 line
39600 49800 39100 49500 10 line
39100 50100 39100 49800 10 line
39100 49800 39100 49500 10 line
39350 50000 45 0 360 10 darc
39600 50000 39395 50000 10 line
39600 49600 39275 49600 10 line
38800 49800 39100 49800 10 line
grestore
gsave
39100 49300 39600 49000 10 line
39600 49000 39100 48700 10 line
39100 49300 39100 49000 10 line
39100 49000 39100 48700 10 line
39350 49200 45 0 360 10 darc
39600 49200 39395 49200 10 line
39600 48800 39275 48800 10 line
38800 49000 39100 49000 10 line
grestore
39600 50800 60500 50800 10 line
39600 50400 60500 50400 10 line
39600 50000 60500 50000 10 line
39600 49600 60500 49600 10 line
39600 49200 60500 49200 10 line
39600 48800 60500 48800 10 line
38800 49000 38600 49000 10 line
38600 49000 38600 45500 10 line
38600 45500 41800 45500 10 line
38800 49800 38300 49800 10 line
38300 49800 38300 45200 10 line
38300 45200 44300 45200 10 line
38800 50600 38000 50600 10 line
38000 44900 38000 50600 10 line
38000 44900 46800 44900 10 line
gsave
false false false false 312.000000 [(1) ] 0 59900 57600 216.666672 text
grestore
gsave
false false false false 312.000000 [(2) ] 0 59200 57600 216.666672 text
grestore
gsave
false false false false 312.000000 [(3) ] 0 58500 57600 216.666672 text
grestore
gsave
false false false false 312.000000 [(4) ] 0 57400 57600 216.666672 text
grestore
gsave
false false false false 312.000000 [(5) ] 0 56700 57600 216.666672 text
grestore
gsave
false false false false 312.000000 [(6) ] 0 56000 57600 216.666672 text
grestore
gsave
false false false false 312.000000 [(7) ] 0 54900 57600 216.666672 text
grestore
gsave
false false false false 312.000000 [(8) ] 0 54200 57600 216.666672 text
grestore
gsave
false false false false 312.000000 [(9) ] 0 53500 57600 216.666672 text
grestore
gsave
false false false false 312.000000 [(10) ] 0 52400 57600 216.666672 text
grestore
gsave
false false false false 312.000000 [(11) ] 0 51700 57600 216.666672 text
grestore
gsave
false false false false 312.000000 [(12) ] 0 50900 57600 216.666672 text
grestore
gsave
false false false false 312.000000 [(13) ] 0 49900 57600 216.666672 text
grestore
gsave
false false false false 312.000000 [(14) ] 0 49200 57600 216.666672 text
grestore
gsave
false false false false 312.000000 [(15) ] 0 48500 57600 216.666672 text
grestore
gsave
false false false false 312.000000 [(16) ] 0 47400 57600 216.666672 text
grestore
gsave
false false false false 312.000000 [(17) ] 0 46700 57600 216.666672 text
grestore
gsave
false false false false 312.000000 [(18) ] 0 46000 57600 216.666672 text
grestore
gsave
false false false false 312.000000 [(19) ] 0 44900 57600 216.666672 text
grestore
gsave
false false false false 312.000000 [(20) ] 0 44200 57600 216.666672 text
grestore
gsave
false false false false 312.000000 [(21) ] 0 43500 57600 216.666672 text
grestore
gsave
false false false false 312.000000 [(22) ] 0 42400 57600 216.666672 text
grestore
gsave
false false false false 312.000000 [(23) ] 0 41700 57600 216.666672 text
grestore
gsave
false false false false 312.000000 [(24) ] 0 41000 57600 216.666672 text
grestore
gsave
false false false false 312.000000 [(1) ] 0 60700 48700 216.666672 text
grestore
gsave
false false false false 312.000000 [(2) ] 0 60700 49200 216.666672 text
grestore
gsave
false false false false 312.000000 [(3) ] 0 60700 49500 216.666672 text
grestore
gsave
false false false false 312.000000 [(4) ] 0 60700 49900 216.666672 text
grestore
gsave
false false false false 312.000000 [(5) ] 0 60700 50300 216.666672 text
grestore
gsave
false false false false 312.000000 [(6) ] 0 60700 50700 216.666672 text
grestore
gsave
false false false false 312.000000 [(7) ] 0 60700 51100 216.666672 text
grestore
gsave
false false false false 312.000000 [(8) ] 0 60700 51600 216.666672 text
grestore
gsave
false false false false 312.000000 [(9) ] 0 60700 51900 216.666672 text
grestore
gsave
false false false false 312.000000 [(10) ] 0 60600 52300 216.666672 text
grestore
gsave
false false false false 312.000000 [(11) ] 0 60600 52700 216.666672 text
grestore
gsave
false false false false 312.000000 [(12) ] 0 60600 53100 216.666672 text
grestore
gsave
false false false false 312.000000 [(13) ] 0 60600 53400 216.666672 text
grestore
gsave
false false false false 312.000000 [(14) ] 0 60600 53800 216.666672 text
grestore
gsave
false false false false 312.000000 [(15) ] 0 60600 54200 216.666672 text
grestore
gsave
false false false false 312.000000 [(16) ] 0 60600 54600 216.666672 text
grestore
gsave
false false false false 312.000000 [(17) ] 0 60600 55000 216.666672 text
grestore
gsave
false false false false 312.000000 [(18) ] 0 60600 55400 216.666672 text
grestore
gsave
false false false false 312.000000 [(19) ] 0 60600 55800 216.666672 text
grestore
gsave
false false false false 312.000000 [(20) ] 0 60600 56200 216.666672 text
grestore
gsave
false false false false 312.000000 [(21) ] 0 60600 56500 216.666672 text
grestore
gsave
false false false false 312.000000 [(22) ] 0 60600 56900 216.666672 text
grestore
36800 43900 61500 43900 10 line
61500 43900 61500 58900 10 line
61500 58900 36800 58900 10 line
36800 58900 36800 43900 10 line
60 60 60470 54270 fbox
60 60 60470 54670 fbox
60 60 60470 55070 fbox
60 60 60470 55470 fbox
60 60 60470 55870 fbox
60 60 60470 56270 fbox
60 60 60470 56570 fbox
60 60 60470 56970 fbox
60 60 59970 57370 fbox
60 60 59270 57370 fbox
60 60 58570 57370 fbox
60 60 57470 57370 fbox
60 60 56770 57370 fbox
60 60 56070 57370 fbox
60 60 54970 57370 fbox
60 60 54270 57370 fbox
60 60 53570 57370 fbox
60 60 37470 56770 fbox
60 60 37470 56070 fbox
60 60 37470 55270 fbox
60 60 37470 54470 fbox
60 60 59270 44470 fbox
60 60 56770 44470 fbox
60 60 54270 44470 fbox
60 60 52470 57370 fbox
60 60 51770 57370 fbox
60 60 51070 57370 fbox
60 60 49970 57370 fbox
60 60 49270 57370 fbox
60 60 48570 57370 fbox
60 60 47470 57370 fbox
60 60 46770 57370 fbox
60 60 46070 57370 fbox
60 60 51770 44470 fbox
60 60 49270 44470 fbox
60 60 46770 44470 fbox
newpath
46800 44900
25
0 360 arc
fill
60 60 44970 57370 fbox
60 60 44270 57370 fbox
60 60 43570 57370 fbox
60 60 42470 57370 fbox
60 60 41770 57370 fbox
60 60 41070 57370 fbox
60 60 44270 44470 fbox
newpath
44300 45200
25
0 360 arc
fill
60 60 41770 44470 fbox
newpath
41800 45500
25
0 360 arc
fill
60 60 60470 51170 fbox
60 60 60470 51570 fbox
60 60 60470 51970 fbox
60 60 60470 52370 fbox
60 60 60470 52770 fbox
60 60 60470 53170 fbox
60 60 60470 53470 fbox
60 60 60470 53870 fbox
60 60 37470 53670 fbox
60 60 37470 52970 fbox
60 60 37470 52170 fbox
60 60 37470 51370 fbox
60 60 60470 50770 fbox
60 60 60470 50370 fbox
60 60 60470 49970 fbox
60 60 60470 49570 fbox
60 60 60470 49170 fbox
60 60 60470 48770 fbox
newpath
41800 45500
25
0 360 arc
fill
newpath
41800 45500
25
0 360 arc
fill
newpath
44300 45200
25
0 360 arc
fill
newpath
44300 45200
25
0 360 arc
fill
newpath
46800 44900
25
0 360 arc
fill
newpath
46800 44900
25
0 360 arc
fill
showpage
%%End
