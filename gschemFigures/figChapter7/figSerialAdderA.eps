%!PS-Adobe-3.0 EPSF-3.0 
%%BoundingBox: 0 0 238 94
%%Pages: 0
%%Creator: LibreOffice 3.3
%%Title: none
%%CreationDate: none
%%LanguageLevel: 2
%%EndComments
%%BeginProlog
%%BeginResource: procset SDRes-Prolog 1.0 0
/b4_inc_state save def
/dict_count countdictstack def
/op_count count 1 sub def
userdict begin
0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin 10 setmiterlimit[] 0 setdash newpath
/languagelevel where {pop languagelevel 1 ne {false setstrokeadjust false setoverprint} if} if
/bdef {bind def} bind def
/c {setgray} bdef
/l {neg lineto} bdef
/rl {neg rlineto} bdef
/lc {setlinecap} bdef
/lj {setlinejoin} bdef
/lw {setlinewidth} bdef
/ml {setmiterlimit} bdef
/ld {setdash} bdef
/m {neg moveto} bdef
/ct {6 2 roll neg 6 2 roll neg 6 2 roll neg curveto} bdef
/r {rotate} bdef
/t {neg translate} bdef
/s {scale} bdef
/sw {show} bdef
/gs {gsave} bdef
/gr {grestore} bdef
/f {findfont dup length dict begin
{1 index /FID ne {def} {pop pop} ifelse} forall /Encoding ISOLatin1Encoding def
currentdict end /NFont exch definefont pop /NFont findfont} bdef
/p {closepath} bdef
/sf {scalefont setfont} bdef
/ef {eofill}bdef
/pc {closepath stroke}bdef
/ps {stroke}bdef
/pum {matrix currentmatrix}bdef
/pom {setmatrix}bdef
/bs {/aString exch def /nXOfs exch def /nWidth exch def currentpoint nXOfs 0 rmoveto pum nWidth aString stringwidth pop div 1 scale aString show pom moveto} bdef
%%EndResource
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%EndPageSetup
pum
0.02839 0.02846 s 
0 -3302 t
/tm matrix currentmatrix def
gs
tm setmatrix
-254 -254 t 
1 1 s 
254 254 m 8635 254 l 8635 3555 l 254 3555 l 254 254 l eoclip newpath
gs
0 0 m 8381 0 l 8381 3301 l 0 3301 l 0 0 l eoclip newpath
gs
tm setmatrix
1693.33333 0 t 
11.75925 11.75925 s 
gs
gs
tm setmatrix
19956.63677 38987.19999 t 
11.78773 11.8 s 
%%BeginDocument:
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: gEDA gschem 1.6.1-20100214-22-ga30f00b
%%CreationDate: Fri Jan 25 12:21:30 2013
%%Title: /home/khalid/Desktop/digitalLogicDesign/gschemFigures/figChapter6/figSerialAdderA.sch
%%Author: (null)
%%BoundingBox: 0 0 424 280
%%Orientation: Portrait
%%Pages: 1
%%Endcomments
%%BeginProlog
% Prolog for gEDA, define all the functions needed for rendering
% schematics on Postscript devices


% Draw a line from the second coordinate to the first
% x2 y2 x1 y1 width line -
/line {
    setlinewidth
    % pop off first element and moveto
    moveto
    % pop off remaining elements and draw a line segment
    lineto
    % draw it
    stroke
} bind def


% Draw a dot
% x y r dot -
/dot {
    0 360 arc fill
} bind def

% Draw a dot-dashed line, a bunch of lined segments,
% if the array element only has length two, draw a dot.
% [ [x2 y2 x1 y1] [x4 y4 x3 y3] [x5 y5] ... ] width dashed -
/width 0 def
/dashed {
    dup 2.0 div /width exch def
    setlinewidth
    % pop off each line segment and draw it as a dot or as a line
    {
	aload length 2 gt
	{ moveto lineto stroke}
	{ width dot } ifelse
    } forall
} bind def

% Draw an arc segment
% x y r ang1 ang2 width darc -
/darc {
    setlinewidth
    arc stroke
} bind def

% Draw a series of arc segment bits, if the array element only has a single
% element in it, draw a dot.
% [ [sa1 ea1] [sa2 ea2] ... ] x y r width dashedarc -
/x 0 def
/y 0 def
/dashedarc {
    dup /width exch def
    setlinewidth
    /r exch def  
    /y exch def
    /x exch def
    { aload length 1 gt
	{
	    % this element had two angles in it
	    % extract start and stop angles
	    x y r   % drop x y and r onto stack
		    % at this point we have: sa ea x y r
		    % we need                      x y r sa ea
		    % so..
	    5 -2 roll
	    % and add it to the current path, and draw it
	    arc stroke
	} {
	    % this element only had one angle in it, place a
	    % filled dot at the appropriate place
	    % compute center point of the arc using the angle
	    % that is on the top of the stack
	    dup   		% angle angle
	    cos r mul x add 	% angle x
	    exch		% x angle
	    sin r mul y add	% x y
	    width		% x y width/2
	    dot			% draw the dot
	} ifelse
    } forall

    % Now draw it
    stroke
} bind def

% Draw a box
% width height x y linethickness box -
/box {
    setlinewidth
    moveto
    exch dup 0 rlineto	 % w h, h w w 0      -- Draw bottom line
    exch 0 exch rlineto	 % h w, w h 0, w 0 h -- Draw right line 
    neg 0 rlineto	 % w, -w 0           -- Draw Top line
    closepath		 % finish and draw it
    stroke
} bind def			     

% Draw a filled box
% width height x y fbox -
/fbox {
    moveto
    exch dup 0 rlineto	
    exch 0 exch rlineto	
    neg 0 rlineto		
    closepath			
    fill			
} bind def

% Font reincoding utilities

% ISOLatin1Encoding, extended with remaining uncoded glyphs
/ISOLatin1Extended [
    /.notdef /Lslash /lslash /OE /oe /Scaron /scaron /Zcaron /zcaron
    /Ydieresis /trademark /bullet /dagger /daggerdbl /ellipsis /emdash
    /endash /fi /fl /florin /fraction /guilsinglleft /guilsinglright
    /perthousand /quotedblbase /quotedblleft /quotedblright
    /quotesinglbase /quotesingle /.notdef /.notdef /.notdef /space
    /exclam /quotedbl /numbersign /dollar /percent /ampersand
    /quoteright /parenleft /parenright /asterisk /plus /comma /minus
    /period /slash /zero /one /two /three /four /five /six /seven /eight
    /nine /colon /semicolon /less /equal /greater /question /at /A /B /C
    /D /E /F /G /H /I /J /K /L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z
    /bracketleft /backslash /bracketright /asciicircum /underscore
    /quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o /p /q /r /s
    /t /u /v /w /x /y /z /braceleft /bar /braceright /asciitilde
    /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
    /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
    /.notdef /.notdef /.notdef /dotlessi /grave /acute /circumflex
    /tilde /macron /breve /dotaccent /dieresis /.notdef /ring /cedilla
    /.notdef /hungarumlaut /ogonek /caron /space /exclamdown /cent
    /sterling /currency /yen /brokenbar /section /dieresis /copyright
    /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron
    /degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph
    /periodcentered /cedilla /onesuperior /ordmasculine /guillemotright
    /onequarter /onehalf /threequarters /questiondown /Agrave /Aacute
    /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla /Egrave /Eacute
    /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis /Eth
    /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
    /Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn
    /germandbls /agrave /aacute /acircumflex /atilde /adieresis /aring
    /ae /ccedilla /egrave /eacute /ecircumflex /edieresis /igrave
    /iacute /icircumflex /idieresis /eth /ntilde /ograve /oacute
    /ocircumflex /otilde /odieresis /divide /oslash /ugrave /uacute
    /ucircumflex /udieresis /yacute /thorn /ydieresis
] def

% `new-font-name' `encoding-vector' `old-font-name' RE -
/RE {
    findfont
    dup maxlength dict begin {
        1 index /FID ne { def } { pop pop } ifelse
    } forall
    /Encoding exch def
    dup /FontName exch def
    currentdict end definefont pop
} bind def

% Text handling functions, select the font and scale it, then we need
% only to apply the appropriate transformations to get the text
% justified into the right spots.  The bad thing here is that we don't
% do any kerning, so the output may look a bit strange.

% compute the height of one character and return lly and ury
% (char) charheight lly ury
/charheight {
    gsave			% push graphics state
	newpath			% clear current path
	0 0 moveto		% Set current point
	false charpath		% get path
	flattenpath		% flatten path
	pathbbox		% stack = llx lly urx ury
	exch pop		% stack = llx lly ury
	3 -1 roll pop		% stack = lly ury
    grestore			% pop graphics state
} bind def

% compute the height of a string, one character at a time
% (string) stringheight lly ury
/lly 0.0 def
/ury 0.0 def

/stringheight {
    /lly 0.0 def			% initial value of heightmin
    /ury 0.0 def			% initial value of heightmax
    {				% work through string
	( ) dup 0 4 -1 roll put	% create one character string
	charheight		% measure it's height
	dup ury gt {		% if ury gt heightmax
	    /ury exch def	% update with new value
	} {
	    pop			% else discard ury
	} ifelse
	dup lly lt {		% if lly lt heightmin
	    /lly exch def	% update with new value
	} {
	    pop			% else discard lly
	} ifelse
    } forall
    lly ury			% Return the results
} bind def

% calculate the string width taking into account the escapes.
/mystrx 0.0 def
/mystry 0.0 def
/mystresc false def

/mystringwidth {
    /mystrx 0.0 def
    /mystry 0.0 def
    /mystresc false def
    {				% work through string
	% did we process the escape character last?
	mystresc {
	    % last character was escape
	    % handle the escape
	    % is it an _ = 95?
	    dup 95 eq {
		pop  % we don't need the character anymore
		% toggle drawing overbars
		0.0 0.0 % make it like it never happened...
	    } {
		% otherwise measure the character 
		(\\ ) dup 1 4 -1 roll put % count a \ and the character
		stringwidth
	    } ifelse
	    % and reset the flag
	    /mystresc false def
	} {
	    % last character was not escape
	    % is this escape
	    dup 92 eq {
		% yes, escape character, set flag
		/mystresc true def
		pop % drop character
		0.0 0.0 % make like this character has no width and height
	    } {
		( ) dup 0 4 -1 roll put	% create one character string
		stringwidth		% measure it's height/width
	    } ifelse
	} ifelse
	% accumulate x and y movements
	mystry add /mystry exch def
	mystrx add /mystrx exch def
    } forall
    mystrx mystry % drop results on stack
} bind def

% Render a string with overbars
%
/escaped false def
/drawoverbar false def
/fontsize 0.0 def

%string1 string2 append -
/append {
    2 copy length exch length add % find new length
    string dup % string1 string2 string string
    4 2 roll % string string string1 string2
    2 index 0 3 index
    % string string string1 string2 string 0 string1
    putinterval % string string string1 string2
    exch length exch putinterval
} bind def

% If drawoverbar is set, draw a line of the same length as the given string
% string overbarshowline -
/overbarshowline {
    % print overbar if necessary
    stringwidth pop 0
    drawoverbar {
        rlineto
        gsave stroke grestore
    } {
        rmoveto
    } ifelse
} bind def

% Draws overbars for the given string, then shows the string itself
% string overbarshow
/overbarshow {
    /overbarshowacc () def
    /overbarshowtxt () def

    gsave
    fontsize 10.0 div setlinewidth
    0 fontsize rmoveto  % move to (0,overbarheight)

    {				% work through string
	escaped {
	    % the last character was the escape
	    % handle the escape
	    % is it an _ = 95?
	    dup 95 eq {
		pop  % we don't need the character anymore
                overbarshowacc overbarshowline
                % toggle drawing overbars
		/drawoverbar drawoverbar not def

                % Append the contents off the accumulator to the text
                % string we're eventually going to show
                /overbarshowtxt overbarshowtxt overbarshowacc append def

                % clear accumulator
                /overbarshowacc () def
	    } {
                % add to accumulator
                (\\ ) dup 1 4 -1 roll put
                overbarshowacc exch append
                /overbarshowacc exch def
	    } ifelse
	    % and reset the flag
	    /escaped false def
	} {
	    % check for escape character \ = 92
	    dup 92 eq {
		% yes, escape character, set flag
		/escaped true def
		pop % drop character
	    } {
                % add to accumulator
                ( ) dup 0 4 -1 roll put
                overbarshowacc exch append
                /overbarshowacc exch def
	    } ifelse
	} ifelse
    } forall
    % Catch any leftovers
    overbarshowacc overbarshowline
    overbarshowtxt overbarshowacc append

    grestore
    show
} bind def

% 
% hcenter rjustify vcenter vjustify spacing [(line1) (line2) ... ] rot x y size text -
/stringw 0.0 def
/stringh 0.0 def
/spacing 0.0 def
/strings [ ] def
/stringtxt ( ) def
/stringcount 0 def
/rot 0.0 def

/text {
    gsave	        % save state for later
    /drawoverbar false def      % start by not drawing overbars

    dup /fontsize exch def  % save font size for corrections later
    % do font selection 
    /gEDAFont findfont
    exch scalefont
    setfont

    % set up coordinates
    translate           % move origin to given point
    rotate		% rotate so that text is drawn
    0 0 moveto
    dup length /stringcount exch def			% Get number of strings
    /strings exch def     				% save strings
    /spacing exch def
    % do we have more than 1 string to render?
    stringcount 1 eq {
	/stringtxt strings aload pop def		% get the string 
	/stringw stringtxt mystringwidth pop neg def	% get the -width
	/stringh stringtxt stringheight exch pop neg def% get the -height

	% First do vertical calculations
	% hcenter rjustify vcenter vjustify 
	% vertical justification
	{ 0 stringh rmoveto } if 
	% vertical center
	{ 0 stringh 0.3571425 mul rmoveto } if  % not 0.5, so that
						% it looks nicer
	% Then do horizontal calculations
	% right justify
	{ stringw 0 rmoveto } if
	% center
	{ stringw 2.0 div 0 rmoveto } if
	% Draw the text
	stringtxt overbarshow
    } {
	% More than one line, compute bounding box for the text

	% vertical height, don't use the actual hieght of the characters
	% assume that the user wants to make the baselines line up with two
	% text boxes placed side by side
	/stringh stringcount spacing mul neg def
	% Now figure out horizontal size, this amounts to keeping track
	% of the longest string
	/stringw 0.0 def
	strings {
	    mystringwidth pop
	    dup stringw gt {
		/stringw exch def
	    } {
		pop
	    } ifelse
	} forall
	/stringw stringw neg def 	% get the -width
	
	% First do vertical calculations
	% hcenter rjustify vcenter vjustify 
	% vertical justification
	{ 0 stringh fontsize add rmoveto } if 
	% vertical center
	{ 0 stringh 0.5 mul rmoveto } if 
	% Then do horizontal calculations
	% right justify
	{ stringw 0 rmoveto } if
	% center
	{ stringw 2.0 div 0 rmoveto } if
	% now move up to the first line and begin rendering
	0 stringcount 1 sub spacing mul rmoveto
	strings {
	    gsave		% Save starting point
	    overbarshow		% render the text
	    grestore
	    0 spacing neg rmoveto
	} forall
    } ifelse
    grestore 	% Restore old state
} bind def


%%EndProlog
%%Page: 1 1
/gEDAFont ISOLatin1Extended /Helvetica RE
2 setlinecap
0.072000 0.072000 scale
0 0 translate
1.000000 1.000000 scale
-44100 -46400 translate
gsave
48100 47300 48700 47300 10 line
48700 47300 48700 48300 10 line
48700 48300 48100 48300 10 line
48100 48300 48100 47300 10 line
49000 48100 48700 48100 10 line
gsave
false true false false 260.000000 [(D) ] 0 48645 48095 180.555557 text
grestore
49000 47800 48700 47800 10 line
gsave
false true false false 260.000000 [(C) ] 0 48545 47745 180.555557 text
grestore
47800 48100 48100 48100 10 line
gsave
false false false false 260.000000 [(Q) ] 0 48155 48095 180.555557 text
grestore
47800 47500 48100 47500 10 line
gsave
false false false false 260.000000 [(\\_Q\\_) ] 0 48155 47495 180.555557 text
grestore
48700 47900 48600 47800 10 line
48600 47800 48700 47700 10 line
48400 47250 50 0 360 10 darc
48400 47000 48400 47200 10 line
grestore
gsave
48100 48500 48700 48500 10 line
48700 48500 48700 49500 10 line
48700 49500 48100 49500 10 line
48100 49500 48100 48500 10 line
47800 49300 48100 49300 10 line
47800 49000 48100 49000 10 line
49000 49300 48700 49300 10 line
gsave
false true false false 260.000000 [(s) ] 0 48645 49295 180.555557 text
grestore
49000 48700 48700 48700 10 line
gsave
false true false false 260.000000 [(c) ] 0 48645 48695 180.555557 text
grestore
47800 48700 48100 48700 10 line
grestore
49000 49300 49600 49300 10 line
49000 48700 49100 48700 10 line
49100 48700 49100 48100 10 line
49100 48100 49000 48100 10 line
49000 47800 49800 47800 10 line
48400 47000 48400 46900 10 line
48400 46900 47300 46900 10 line
47800 48100 47700 48100 10 line
47700 48100 47700 48700 10 line
47700 48700 47800 48700 10 line
47300 49000 47800 49000 10 line
47300 49300 47800 49300 10 line
gsave
45400 49200 46600 49200 10 line
46600 49200 46600 49800 10 line
46600 49800 45400 49800 10 line
45400 49800 45400 49200 10 line
45100 49700 45400 49700 10 line
46900 49700 46600 49700 10 line
45100 49400 45400 49400 10 line
45400 49450 45450 49400 10 line
45450 49400 45400 49350 10 line
grestore
gsave
45400 48200 46600 48200 10 line
46600 48200 46600 48800 10 line
46600 48800 45400 48800 10 line
45400 48800 45400 48200 10 line
45100 48700 45400 48700 10 line
46900 48700 46600 48700 10 line
45100 48400 45400 48400 10 line
45400 48450 45450 48400 10 line
45450 48400 45400 48350 10 line
grestore
46900 49700 47300 49700 10 line
47300 49700 47300 49300 10 line
47300 49000 47300 48700 10 line
47300 48700 46900 48700 10 line
45100 49700 44900 49700 10 line
44900 49700 44900 50100 10 line
44900 50100 49600 50100 10 line
49600 50100 49600 49300 10 line
45100 49400 44900 49400 10 line
44900 46600 44900 49400 10 line
44900 48400 45100 48400 10 line
49800 47800 49800 46600 10 line
49800 46600 44900 46600 10 line
44600 48400 44900 48400 10 line
44100 46400 50000 46400 10 line
50000 46400 50000 50300 10 line
50000 50300 44100 50300 10 line
44100 50300 44100 46400 10 line
60 60 47270 46870 fbox
newpath
44900 48400
25
0 360 arc
fill
newpath
44900 48400
25
0 360 arc
fill
newpath
44900 48400
25
0 360 arc
fill
newpath
44900 48400
25
0 360 arc
fill
60 60 44570 48370 fbox
newpath
44900 48400
25
0 360 arc
fill
newpath
44900 48400
25
0 360 arc
fill
showpage
%%End
%%EndDocument
gr
gr
gr


gs
tm setmatrix
4022 476 t 
1 1 s 
gs
gs
0 0 m 363 0 l 363 308 l 0 308 l 0 0 l eoclip newpath
gs
pum
132 238 t
0.234 c 45 -124 m  48 -119 50 -114 51 -109 ct 53 -105 54 -95 55 -82 ct 61 -15 l 
66 -21 74 -32 85 -46 ct 90 -53 96 -62 103 -74 ct 108 -81 111 -87 112 -89 ct 112 -91 113 -92 113 -94 ct 
113 -95 112 -96 112 -96 ct 111 -97 109 -98 107 -99 ct 104 -100 102 -101 100 -104 ct 
98 -106 97 -109 97 -112 ct 97 -115 98 -118 100 -121 ct 103 -123 105 -124 109 -124 ct 
113 -124 116 -122 119 -119 ct 122 -116 123 -111 123 -105 ct 123 -98 121 -90 116 -81 ct 
111 -71 101 -57 87 -38 ct 73 -19 56 2 36 25 ct 22 40 12 50 5 54 ct -1 58 -7 60 -12 61 ct 
-15 60 -17 59 -19 57 ct -21 55 -22 53 -23 50 ct -22 46 -21 43 -18 40 ct -15 37 -12 36 -8 36 ct 
-7 36 -5 36 -4 37 ct -3 37 -2 39 -1 41 ct -1 43 0 44 1 45 ct 1 46 2 46 3 46 ct 3 46 4 45 5 44 ct 
11 41 16 36 23 30 ct 32 21 38 13 43 8 ct 35 -79 l  34 -93 32 -102 29 -105 ct 27 -108 22 -110 16 -110 ct 
14 -110 11 -110 6 -109 ct 5 -114 l  45 -124 l  p ef
pom
gr
gr
gr
gr

gs
tm setmatrix
4048 1032 t 
1 1 s 
gs
gs
0 0 m 333 0 l 333 308 l 0 308 l 0 0 l eoclip newpath
gs
pum
132 238 t
0.234 c 24 -121 m  111 -121 l  111 -118 l  16 -19 l  56 -19 l  66 -19 72 -19 74 -20 ct 
77 -20 79 -22 81 -24 ct 83 -27 86 -31 88 -37 ct 93 -37 l  82 0 l  -8 0 l  -8 -4 l 
87 -103 l  48 -103 l  39 -103 34 -103 33 -102 ct 30 -102 27 -100 25 -98 ct 22 -96 20 -92 17 -86 ct 
12 -86 l  24 -121 l  p ef
pom
gr
gr
gr
gr

gs
tm setmatrix
5662 529 t 
1 1 s 
gs
gs
0 0 m 329 0 l 329 308 l 0 308 l 0 0 l eoclip newpath
gs
pum
132 238 t
0.234 c 102 -124 m  94 -82 l  89 -82 l  88 -94 85 -103 81 -109 ct 76 -114 70 -117 63 -117 ct 
57 -117 53 -115 49 -112 ct 46 -109 44 -106 44 -101 ct 44 -98 45 -95 46 -92 ct 48 -90 51 -86 55 -81 ct 
67 -68 75 -58 78 -52 ct 82 -45 83 -39 83 -33 ct 83 -24 79 -15 72 -8 ct 64 0 54 3 42 3 ct 
35 3 27 2 19 -1 ct 16 -2 13 -3 12 -3 ct 8 -3 5 -1 2 3 ct -3 3 l  6 -41 l  11 -41 l 
11 -27 14 -17 19 -12 ct 25 -6 32 -3 41 -3 ct 48 -3 53 -5 57 -9 ct 62 -13 64 -17 64 -23 ct 
64 -27 63 -30 61 -33 ct 59 -39 53 -46 45 -56 ct 37 -66 32 -73 29 -78 ct 27 -83 26 -88 26 -92 ct 
26 -101 29 -109 36 -115 ct 42 -121 50 -124 61 -124 ct 63 -124 66 -124 68 -123 ct 
70 -123 73 -122 77 -120 ct 82 -119 85 -118 87 -118 ct 91 -118 94 -120 97 -124 ct 
102 -124 l  p ef
pom
gr
gr
gr
gr

gs
tm setmatrix
1746 1296 t 
1 1 s 
gs
gs
0 0 m 400 0 l 400 469 l 0 469 l 0 0 l eoclip newpath
gs
pum
106 370 t
0.234 c 163 -45 m  149 -28 134 -15 120 -7 ct 105 1 90 5 74 5 ct 54 5 39 -1 28 -12 ct 
17 -23 12 -37 12 -56 ct 12 -77 17 -98 29 -118 ct 41 -139 57 -155 77 -168 ct 96 -181 116 -187 135 -187 ct 
150 -187 161 -184 169 -178 ct 176 -171 180 -164 180 -155 ct 180 -146 177 -139 172 -133 ct 
168 -128 163 -126 158 -126 ct 153 -126 150 -127 147 -130 ct 144 -133 143 -136 143 -140 ct 
143 -143 143 -145 144 -147 ct 145 -150 148 -152 151 -155 ct 154 -158 156 -161 157 -162 ct 
157 -163 158 -165 158 -166 ct 158 -169 156 -172 154 -174 ct 150 -176 144 -178 137 -178 ct 
123 -178 110 -173 97 -163 ct 84 -154 72 -140 63 -123 ct 52 -102 46 -80 46 -59 ct 
46 -45 50 -34 58 -26 ct 66 -18 77 -14 91 -14 ct 101 -14 112 -16 122 -22 ct 132 -27 144 -36 157 -50 ct 
163 -45 l  p ef
pom
gr
gr
gr
gr

pum
5630 1665 t
89.9 r 0.234 c 80 -27 m  80 -16 79 -5 75 5 ct 72 15 67 25 60 34 ct 53 42 46 49 38 53 ct 
31 58 22 60 14 60 ct 4 60 -9 57 -26 49 ct -22 46 l  -15 48 -8 49 -4 49 ct 7 49 17 46 26 40 ct 
32 36 38 32 43 27 ct 49 22 54 17 58 12 ct 67 2 71 -7 71 -14 ct 71 -19 69 -26 64 -36 ct 
59 -45 56 -52 56 -55 ct 56 -56 56 -57 57 -59 ct 57 -60 58 -62 59 -64 ct 66 -77 l 
76 -64 80 -47 80 -27 ct p ef
177 -14 m  168 -14 l  161 -14 155 -15 150 -16 ct 146 -17 142 -20 139 -22 ct 
136 -25 134 -29 133 -33 ct 131 -37 130 -42 130 -48 ct 129 -54 128 -62 127 -74 ct 
126 -85 124 -99 122 -117 ct 120 -132 119 -143 118 -151 ct 117 -159 117 -164 117 -165 ct 
117 -170 121 -178 130 -188 ct 141 -59 l  142 -55 142 -52 143 -49 ct 144 -46 146 -43 148 -41 ct 
151 -40 154 -38 158 -37 ct 162 -36 167 -35 173 -35 ct 177 -35 l  177 -14 l  p ef
332 -190 m  312 -183 293 -177 277 -171 ct 261 -165 246 -160 233 -154 ct 204 -143 189 -135 189 -130 ct 
189 -128 197 -123 213 -115 ct 220 -111 226 -107 231 -103 ct 236 -98 240 -93 244 -88 ct 
251 -77 255 -65 255 -53 ct 255 -46 254 -41 252 -36 ct 250 -31 246 -27 240 -24 ct 
234 -20 226 -18 216 -16 ct 206 -15 193 -14 177 -14 ct 168 -14 l  168 -35 l  172 -35 l 
187 -35 200 -36 210 -37 ct 220 -38 228 -39 233 -41 ct 239 -43 243 -45 245 -47 ct 
247 -49 248 -52 248 -54 ct 248 -57 247 -60 244 -64 ct 242 -68 238 -72 233 -77 ct 
228 -81 223 -85 218 -89 ct 213 -92 209 -95 205 -97 ct 200 -99 195 -101 192 -103 ct 
189 -105 187 -106 186 -108 ct 183 -110 182 -115 182 -123 ct 182 -132 183 -138 186 -142 ct 
186 -142 l  188 -146 198 -152 216 -162 ct 231 -170 249 -178 270 -186 ct 291 -195 315 -203 342 -212 ct 
332 -190 l  p ef
531 101 m  469 121 l  466 121 464 121 461 121 ct 459 121 457 121 455 121 ct 
440 121 426 119 414 116 ct 402 113 392 108 384 101 ct 376 94 370 86 365 77 ct 361 67 359 56 359 43 ct 
359 35 360 26 363 18 ct 365 9 369 1 373 -7 ct 378 -15 384 -23 390 -31 ct 397 -39 405 -47 413 -54 ct 
410 -56 406 -59 402 -61 ct 398 -63 394 -65 391 -67 ct 399 -86 412 -95 429 -95 ct 
433 -95 438 -95 442 -93 ct 446 -92 450 -90 453 -88 ct 457 -86 460 -83 462 -81 ct 
464 -78 465 -75 465 -72 ct 465 -67 458 -61 445 -54 ct 447 -53 449 -51 451 -49 ct 
454 -47 456 -45 458 -44 ct 459 -42 461 -41 463 -40 ct 465 -39 467 -38 470 -37 ct 
473 -37 477 -36 482 -36 ct 486 -36 492 -35 499 -35 ct 504 -35 l  504 -14 l  494 -14 l 
488 -14 483 -14 478 -15 ct 474 -15 469 -16 466 -18 ct 462 -19 458 -21 455 -22 ct 
452 -24 449 -27 446 -29 ct 428 -45 l  408 -35 394 -23 384 -11 ct 374 2 369 16 369 32 ct 
369 42 371 52 377 60 ct 382 69 389 76 399 82 ct 409 88 420 92 434 95 ct 448 99 464 100 482 100 ct 
485 100 491 100 499 99 ct 507 99 517 98 530 97 ct 531 101 l  p ef
592 -41 m  592 -42 591 -44 589 -46 ct 586 -48 583 -50 579 -53 ct 576 -55 572 -57 567 -59 ct 
563 -61 559 -62 555 -64 ct 554 -64 553 -64 552 -65 ct 551 -65 551 -65 550 -65 ct 
549 -65 548 -64 548 -62 ct 548 -61 548 -60 549 -59 ct 549 -58 551 -57 552 -56 ct 
554 -55 556 -54 559 -53 ct 561 -51 565 -50 569 -47 ct 571 -47 573 -46 575 -45 ct 
577 -43 579 -42 581 -42 ct 583 -41 585 -40 586 -39 ct 588 -38 589 -38 590 -38 ct 
592 -38 592 -39 592 -41 ct p
712 -65 m  707 -65 702 -65 698 -65 ct 693 -66 689 -66 684 -67 ct 680 -68 675 -68 671 -69 ct 
666 -70 662 -72 657 -73 ct 647 -76 638 -78 629 -79 ct 620 -80 612 -81 604 -81 ct 
600 -81 596 -81 592 -80 ct 588 -80 583 -79 579 -78 ct 583 -75 586 -72 588 -69 ct 
591 -66 593 -63 595 -61 ct 596 -58 598 -55 598 -52 ct 599 -49 599 -46 599 -42 ct 
599 -28 594 -21 585 -21 ct 580 -21 573 -22 565 -25 ct 556 -28 547 -32 537 -37 ct 
536 -33 534 -30 532 -27 ct 530 -24 528 -22 526 -20 ct 523 -18 520 -16 517 -15 ct 
514 -14 510 -14 506 -14 ct 496 -14 l  496 -35 l  500 -35 l  507 -35 512 -36 516 -37 ct 
521 -38 524 -39 527 -40 ct 530 -42 532 -44 533 -46 ct 535 -48 535 -50 536 -53 ct 
537 -66 543 -75 554 -81 ct 565 -88 581 -91 602 -91 ct 604 -91 608 -91 613 -91 ct 
617 -90 623 -90 631 -89 ct 611 -108 592 -117 575 -117 ct 572 -117 567 -116 561 -115 ct 
564 -122 568 -127 574 -130 ct 579 -133 586 -135 593 -135 ct 596 -135 599 -134 601 -133 ct 
604 -133 607 -131 611 -129 ct 614 -127 618 -125 622 -122 ct 626 -120 630 -117 635 -113 ct 
638 -111 641 -110 644 -107 ct 647 -105 649 -104 652 -102 ct 654 -100 656 -99 658 -98 ct 
659 -97 660 -96 660 -96 ct 660 -96 l  668 -92 676 -88 684 -86 ct 692 -84 701 -82 710 -82 ct 
712 -65 l  p ef
671 -18 m  665 -8 l  665 -6 664 -4 663 -2 ct 662 -1 661 1 660 3 ct 651 -4 l 
649 -5 648 -6 646 -7 ct 645 -8 643 -9 642 -10 ct 643 -13 645 -17 647 -20 ct 649 -23 650 -26 652 -30 ct 
671 -18 l  p ef
pom

pum
3494 2999 t
140 -113 m  129 -93 l  110 -106 l  108 -103 106 -100 105 -97 ct 103 -94 101 -91 99 -89 ct 
79 -101 l  92 -121 l  111 -109 l  112 -111 114 -114 116 -117 ct 118 -120 120 -123 122 -125 ct 
140 -113 l  p
245 -14 m  235 -14 l  227 -14 220 -16 215 -19 ct 211 -22 208 -26 208 -31 ct 
184 -10 145 0 92 0 ct 32 0 2 -17 2 -49 ct 2 -60 7 -74 16 -92 ct 20 -90 l  15 -80 13 -72 13 -65 ct 
13 -59 15 -53 19 -48 ct 24 -43 30 -39 38 -35 ct 46 -32 55 -29 65 -27 ct 76 -25 88 -24 100 -24 ct 
113 -24 125 -25 137 -26 ct 149 -28 160 -30 170 -32 ct 180 -35 189 -38 195 -42 ct 
201 -45 205 -49 207 -54 ct 208 -51 209 -48 211 -46 ct 212 -43 214 -42 217 -40 ct 
220 -39 223 -37 227 -37 ct 230 -36 235 -35 241 -35 ct 245 -35 l  245 -14 l  p ef
440 -14 m  430 -14 l  427 -14 424 -15 421 -16 ct 418 -18 416 -20 413 -22 ct 
411 -25 409 -28 407 -31 ct 405 -35 404 -39 403 -43 ct 399 -34 395 -28 390 -24 ct 
385 -20 380 -17 373 -17 ct 363 -17 357 -23 353 -34 ct 347 -26 342 -21 337 -18 ct 
334 -17 331 -16 328 -15 ct 324 -14 320 -14 316 -14 ct 312 -14 309 -14 306 -14 ct 
304 -15 301 -16 299 -18 ct 297 -19 296 -21 294 -24 ct 292 -27 291 -30 289 -34 ct 
285 -28 279 -23 272 -20 ct 265 -16 258 -14 249 -14 ct 239 -14 l  239 -35 l  243 -35 l 
249 -35 255 -36 259 -36 ct 263 -37 267 -37 270 -38 ct 273 -39 276 -40 278 -42 ct 
280 -43 282 -45 284 -47 ct 286 -48 288 -50 289 -53 ct 291 -55 293 -58 295 -60 ct 
298 -60 l  299 -50 301 -44 302 -41 ct 302 -41 l  305 -37 309 -35 316 -35 ct 
328 -35 338 -37 343 -42 ct 348 -45 354 -52 362 -64 ct 364 -63 l  365 -50 370 -43 380 -43 ct 
390 -43 397 -50 403 -64 ct 406 -64 l  407 -60 408 -57 410 -53 ct 412 -50 414 -47 416 -44 ct 
419 -41 422 -39 425 -38 ct 429 -36 432 -35 436 -35 ct 440 -35 l  440 -14 l  p ef
480 53 m  469 74 l  451 62 l  461 42 l  480 53 l  p
487 18 m  475 38 l  456 26 l  454 29 453 31 451 34 ct 449 37 447 40 446 42 ct 
427 30 l  438 11 l  457 22 l  459 19 460 16 462 13 ct 464 10 465 7 467 5 ct 
487 18 l  p
487 -61 m  487 -53 486 -47 484 -41 ct 482 -35 479 -30 475 -26 ct 471 -22 466 -19 460 -17 ct 
454 -15 448 -14 441 -14 ct 431 -14 l  431 -35 l  435 -35 l  442 -35 449 -36 454 -37 ct 
460 -37 464 -38 468 -40 ct 472 -41 475 -42 476 -44 ct 478 -46 479 -47 479 -49 ct 
479 -51 479 -53 477 -55 ct 476 -57 475 -59 473 -62 ct 472 -64 470 -66 469 -68 ct 
468 -71 467 -73 467 -75 ct 467 -76 468 -78 469 -80 ct 469 -82 470 -83 472 -85 ct 
473 -87 474 -89 476 -91 ct 477 -93 478 -95 479 -97 ct 485 -85 487 -73 487 -61 ct 
p ef
792 -14 m  782 -14 l  778 -14 773 -14 769 -16 ct 764 -17 760 -19 756 -20 ct 
752 -22 748 -24 745 -26 ct 741 -29 738 -31 735 -33 ct 732 -34 729 -36 726 -37 ct 
724 -38 721 -39 719 -39 ct 716 -39 712 -38 708 -37 ct 705 -35 702 -33 699 -30 ct 
696 -27 693 -24 692 -21 ct 690 -18 689 -15 689 -12 ct 689 -8 690 -6 692 -4 ct 694 -2 697 0 701 1 ct 
704 2 708 3 713 4 ct 717 5 722 5 727 6 ct 731 6 736 7 740 8 ct 745 8 749 9 753 10 ct 
756 11 759 12 761 14 ct 763 15 764 17 764 20 ct 764 23 763 27 762 31 ct 760 34 757 38 754 41 ct 
751 45 747 48 742 52 ct 738 55 733 58 727 61 ct 715 67 702 72 688 75 ct 674 78 659 80 644 80 ct 
635 80 627 79 619 76 ct 612 74 605 71 600 67 ct 595 62 591 57 588 51 ct 585 44 584 37 584 29 ct 
584 9 591 -11 606 -31 ct 609 -30 l  599 -12 594 3 594 13 ct 594 20 596 25 599 31 ct 
602 36 606 41 611 45 ct 616 49 622 52 629 54 ct 636 57 643 58 651 58 ct 660 58 670 57 680 55 ct 
691 53 703 51 715 47 ct 727 44 736 41 742 38 ct 749 34 752 32 752 29 ct 752 28 751 27 750 26 ct 
748 25 746 24 743 24 ct 742 24 741 24 738 24 ct 736 23 734 23 731 23 ct 727 23 724 22 721 22 ct 
717 22 714 21 711 21 ct 708 21 706 21 703 20 ct 701 20 699 20 699 20 ct 691 19 685 17 681 15 ct 
677 12 675 8 675 3 ct 675 1 676 -3 677 -7 ct 679 -11 681 -15 684 -20 ct 687 -25 690 -29 694 -34 ct 
697 -38 701 -43 705 -46 ct 709 -50 713 -53 717 -55 ct 720 -57 724 -59 727 -59 ct 
730 -59 732 -58 735 -57 ct 738 -56 740 -54 743 -53 ct 745 -51 748 -49 751 -47 ct 
754 -45 757 -43 761 -41 ct 764 -40 768 -38 773 -37 ct 777 -36 782 -35 788 -35 ct 
792 -35 l  792 -14 l  p ef
747 -112 m  735 -94 l  716 -106 l  714 -104 712 -101 710 -98 ct 708 -96 706 -93 704 -91 ct 
686 -103 l  698 -122 l  717 -110 l  719 -113 721 -115 723 -118 ct 725 -120 727 -123 729 -125 ct 
747 -112 l  p ef
944 -67 m  944 -62 943 -56 942 -51 ct 941 -46 939 -41 937 -38 ct 935 -34 932 -31 929 -29 ct 
926 -27 922 -26 919 -26 ct 915 -26 911 -27 907 -30 ct 902 -32 898 -36 894 -41 ct 
884 -23 871 -14 854 -14 ct 851 -14 848 -14 845 -16 ct 842 -17 840 -18 838 -20 ct 
837 -21 836 -22 834 -25 ct 833 -27 831 -30 829 -34 ct 827 -31 824 -28 822 -25 ct 
819 -23 817 -21 814 -19 ct 811 -17 808 -16 804 -15 ct 801 -14 797 -14 793 -14 ct 
783 -14 l  783 -35 l  787 -35 l  793 -35 799 -36 803 -37 ct 808 -38 812 -40 816 -42 ct 
820 -44 823 -46 826 -50 ct 829 -53 832 -56 835 -60 ct 838 -60 l  839 -55 840 -51 840 -48 ct 
841 -45 842 -43 842 -41 ct 842 -41 l  845 -37 848 -35 854 -35 ct 877 -35 892 -48 899 -73 ct 
902 -73 l  904 -58 913 -51 930 -51 ct 934 -51 936 -52 936 -54 ct 936 -56 933 -59 927 -64 ct 
934 -86 l  941 -83 944 -76 944 -67 ct p ef
1054 -54 m  1054 -47 1053 -39 1049 -30 ct 1030 -18 1010 -12 989 -12 ct 987 -12 985 -12 981 -12 ct 
977 -13 973 -13 967 -14 ct 970 -40 l  973 -40 975 -40 978 -40 ct 981 -40 985 -39 988 -39 ct 
1000 -39 1011 -41 1021 -43 ct 1031 -45 1039 -48 1046 -52 ct 1045 -61 1040 -70 1031 -78 ct 
1022 -86 1010 -93 993 -99 ct 1001 -124 l  1015 -121 1028 -112 1038 -98 ct 1049 -85 1054 -70 1054 -54 ct 
p ef
1172 -14 m  1149 -14 l  1147 -2 1145 9 1141 19 ct 1137 29 1133 37 1128 44 ct 
1122 51 1116 56 1109 60 ct 1102 64 1095 66 1087 66 ct 1083 66 1078 65 1072 64 ct 
1065 63 1058 61 1048 58 ct 1052 55 l  1056 55 1060 55 1063 55 ct 1079 55 1095 49 1110 38 ct 
1117 32 1123 25 1128 18 ct 1133 10 1137 2 1140 -7 ct 1138 -11 1135 -14 1133 -18 ct 
1131 -22 1128 -26 1126 -29 ct 1136 -48 l  1138 -45 1140 -43 1142 -41 ct 1144 -39 1145 -38 1148 -37 ct 
1150 -36 1152 -36 1156 -36 ct 1159 -36 1163 -36 1168 -36 ct 1172 -36 l  1172 -14 l 
p ef
1204 23 m  1192 43 l  1174 29 l  1186 10 l  1204 23 l  p
1219 -61 m  1219 -46 1215 -34 1207 -26 ct 1199 -18 1188 -14 1174 -14 ct 1164 -14 l 
1164 -35 l  1168 -35 l  1175 -35 1181 -36 1186 -37 ct 1192 -37 1196 -38 1200 -40 ct 
1203 -41 1206 -42 1208 -44 ct 1210 -46 1211 -47 1211 -49 ct 1211 -51 1210 -53 1209 -55 ct 
1208 -57 1206 -59 1205 -62 ct 1203 -64 1202 -66 1201 -68 ct 1199 -71 1199 -73 1199 -75 ct 
1199 -76 1199 -78 1200 -80 ct 1201 -82 1202 -83 1203 -85 ct 1205 -87 1206 -89 1207 -91 ct 
1209 -93 1210 -95 1211 -97 ct 1216 -85 1219 -73 1219 -61 ct p ef
1311 -129 m  1297 -112 l  1280 -127 l  1294 -144 l  1311 -129 l  p
1321 -27 m  1321 -16 1320 -5 1316 5 ct 1313 15 1308 25 1301 34 ct 1294 42 1287 49 1279 53 ct 
1272 58 1263 60 1255 60 ct 1245 60 1232 57 1215 49 ct 1219 46 l  1227 48 1233 49 1237 49 ct 
1248 49 1258 46 1267 40 ct 1273 36 1279 32 1284 27 ct 1290 22 1295 17 1299 12 ct 
1308 2 1312 -7 1312 -14 ct 1312 -19 1310 -26 1305 -36 ct 1300 -45 1297 -52 1297 -55 ct 
1297 -56 1297 -57 1298 -59 ct 1298 -60 1299 -62 1300 -64 ct 1307 -77 l  1317 -64 1321 -47 1321 -27 ct 
p ef
pom
0 lw 1 lj 0.000 c 3472 2775 m  4828 2775 l  ps

pum
3221 1001 t
0.234 c 47 -58 m  47 -47 44 -33 37 -14 ct 33 -15 l  35 -24 35 -31 35 -34 ct 35 -43 35 -53 33 -64 ct 
33 -64 33 -66 32 -70 ct 32 -73 31 -77 31 -82 ct 30 -87 29 -93 29 -98 ct 28 -104 27 -109 26 -114 ct 
26 -119 25 -123 25 -127 ct 24 -130 24 -132 24 -133 ct 24 -137 23 -140 23 -143 ct 
23 -146 23 -148 23 -150 ct 23 -160 26 -172 34 -188 ct 34 -188 l  35 -178 35 -170 35 -162 ct 
36 -155 36 -148 37 -143 ct 44 -84 l  45 -79 45 -74 46 -70 ct 46 -65 47 -61 47 -58 ct 
p ef
135 -14 m  80 -14 l  100 -36 l  156 -36 l  135 -14 l  p ef
266 -14 m  257 -14 l  250 -14 244 -15 239 -16 ct 235 -17 231 -20 228 -22 ct 
225 -25 223 -29 222 -33 ct 220 -37 219 -42 219 -48 ct 218 -54 217 -62 216 -74 ct 
215 -85 213 -99 211 -117 ct 209 -132 208 -143 207 -151 ct 206 -159 206 -164 206 -165 ct 
206 -170 210 -178 219 -188 ct 230 -59 l  231 -55 231 -52 232 -49 ct 233 -46 235 -43 237 -41 ct 
240 -40 243 -38 247 -37 ct 251 -36 256 -35 262 -35 ct 266 -35 l  266 -14 l  p ef
314 -145 m  302 -127 l  283 -139 l  281 -137 279 -134 277 -131 ct 275 -129 273 -126 271 -124 ct 
253 -136 l  265 -155 l  284 -143 l  286 -145 288 -148 290 -151 ct 292 -153 294 -156 296 -158 ct 
314 -145 l  p
313 -61 m  313 -53 312 -47 310 -41 ct 308 -35 305 -30 301 -26 ct 297 -22 292 -19 286 -17 ct 
280 -15 274 -14 267 -14 ct 257 -14 l  257 -35 l  261 -35 l  268 -35 275 -36 280 -37 ct 
286 -37 290 -38 294 -40 ct 298 -41 301 -42 302 -44 ct 304 -46 305 -47 305 -49 ct 
305 -51 305 -53 303 -55 ct 302 -57 301 -59 299 -62 ct 298 -64 296 -66 295 -68 ct 
294 -71 293 -73 293 -75 ct 293 -76 294 -78 295 -80 ct 295 -82 296 -83 298 -85 ct 
299 -87 300 -89 302 -91 ct 303 -93 304 -95 305 -97 ct 311 -85 313 -73 313 -61 ct 
p ef
410 -14 m  401 -14 l  394 -14 388 -15 383 -16 ct 379 -17 375 -20 372 -22 ct 
369 -25 367 -29 366 -33 ct 364 -37 363 -42 363 -48 ct 362 -54 361 -62 360 -74 ct 
359 -85 357 -99 355 -117 ct 353 -132 352 -143 351 -151 ct 350 -159 350 -164 350 -165 ct 
350 -170 354 -178 363 -188 ct 374 -59 l  375 -55 375 -52 376 -49 ct 377 -46 379 -43 381 -41 ct 
384 -40 387 -38 391 -37 ct 395 -36 400 -35 406 -35 ct 410 -35 l  410 -14 l  p ef
490 -69 m  490 -70 489 -72 489 -73 ct 488 -74 488 -76 487 -77 ct 486 -78 485 -79 484 -79 ct 
483 -80 482 -81 481 -81 ct 475 -81 470 -77 465 -71 ct 460 -64 455 -55 451 -42 ct 
477 -50 490 -58 490 -69 ct p
494 21 m  494 18 493 15 491 12 ct 489 9 486 6 482 3 ct 478 0 473 -2 467 -5 ct 462 -7 456 -9 450 -11 ct 
452 2 455 12 460 19 ct 464 26 471 29 478 29 ct 480 29 482 29 484 29 ct 486 28 488 28 489 27 ct 
491 26 492 26 493 25 ct 494 23 494 22 494 21 ct p
537 -14 m  533 -14 l  528 -14 524 -14 520 -14 ct 517 -14 513 -13 510 -13 ct 
507 -13 504 -13 501 -12 ct 498 -12 495 -12 491 -11 ct 495 -7 497 -3 499 1 ct 500 5 501 9 501 12 ct 
501 18 501 23 499 28 ct 498 33 496 38 493 41 ct 491 45 488 48 485 50 ct 481 53 478 54 473 54 ct 
464 54 457 47 451 35 ct 448 28 446 21 444 14 ct 442 6 441 -2 441 -11 ct 437 -12 431 -13 425 -13 ct 
419 -14 412 -14 405 -14 ct 401 -14 l  401 -35 l  405 -35 l  408 -35 412 -36 415 -36 ct 
418 -36 421 -36 423 -37 ct 426 -37 429 -38 432 -38 ct 435 -39 439 -40 442 -40 ct 
446 -49 450 -57 454 -65 ct 459 -73 463 -80 468 -86 ct 472 -92 476 -97 480 -101 ct 
484 -105 487 -106 490 -106 ct 496 -106 499 -99 499 -85 ct 499 -72 496 -62 491 -53 ct 
489 -49 486 -46 482 -42 ct 478 -38 474 -34 468 -31 ct 472 -32 476 -32 482 -33 ct 
487 -33 493 -34 498 -34 ct 504 -35 509 -35 515 -35 ct 520 -35 524 -35 528 -35 ct 
537 -35 l  537 -14 l  p ef
692 -190 m  672 -183 653 -177 637 -171 ct 621 -165 606 -160 593 -154 ct 564 -143 549 -135 549 -130 ct 
549 -128 557 -123 573 -115 ct 580 -111 586 -107 591 -103 ct 596 -98 600 -93 604 -88 ct 
611 -77 615 -65 615 -53 ct 615 -46 614 -41 612 -36 ct 610 -31 606 -27 600 -24 ct 
594 -20 586 -18 576 -16 ct 566 -15 553 -14 537 -14 ct 528 -14 l  528 -35 l  532 -35 l 
547 -35 560 -36 570 -37 ct 580 -38 588 -39 593 -41 ct 599 -43 603 -45 605 -47 ct 
607 -49 608 -52 608 -54 ct 608 -57 607 -60 604 -64 ct 602 -68 598 -72 593 -77 ct 
588 -81 583 -85 578 -89 ct 573 -92 569 -95 565 -97 ct 560 -99 555 -101 552 -103 ct 
549 -105 547 -106 546 -108 ct 543 -110 542 -115 542 -123 ct 542 -132 543 -138 546 -142 ct 
546 -142 l  548 -146 558 -152 576 -162 ct 591 -170 609 -178 630 -186 ct 651 -195 675 -203 702 -212 ct 
692 -190 l  p ef
pom

pum
3131 1839 t
135 22 m  124 43 l  106 30 l  117 11 l  135 22 l  p
220 -75 m  220 -69 219 -65 218 -60 ct 217 -55 215 -51 212 -47 ct 210 -44 207 -40 203 -37 ct 
199 -34 196 -31 191 -29 ct 183 -26 175 -23 166 -20 ct 158 -17 149 -14 139 -12 ct 
130 -10 121 -9 111 -8 ct 101 -7 92 -6 82 -6 ct 70 -6 58 -7 48 -9 ct 39 -11 30 -14 23 -17 ct 
16 -21 11 -25 7 -31 ct 4 -36 2 -42 2 -48 ct 2 -58 8 -72 19 -89 ct 24 -88 l  17 -78 14 -70 14 -64 ct 
14 -59 16 -54 19 -50 ct 23 -46 27 -43 34 -40 ct 40 -37 48 -35 56 -33 ct 65 -32 75 -31 87 -31 ct 
117 -31 147 -36 176 -45 ct 187 -48 196 -52 202 -55 ct 207 -58 210 -61 210 -64 ct 
210 -65 210 -67 209 -68 ct 209 -68 l  208 -69 207 -71 206 -73 ct 205 -74 204 -76 203 -78 ct 
202 -79 201 -81 201 -83 ct 200 -85 200 -86 200 -88 ct 200 -89 200 -90 201 -92 ct 
201 -94 202 -96 203 -98 ct 203 -100 204 -102 205 -104 ct 206 -106 207 -108 208 -110 ct 
216 -95 220 -83 220 -75 ct p ef
309 -14 m  254 -14 l  274 -36 l  330 -36 l  309 -14 l  p ef
440 -14 m  431 -14 l  424 -14 418 -15 413 -16 ct 409 -17 405 -20 402 -22 ct 
399 -25 397 -29 396 -33 ct 394 -37 393 -42 393 -48 ct 392 -54 391 -62 390 -74 ct 
389 -85 387 -99 385 -117 ct 383 -132 382 -143 381 -151 ct 380 -159 380 -164 380 -165 ct 
380 -170 384 -178 393 -188 ct 404 -59 l  405 -55 405 -52 406 -49 ct 407 -46 409 -43 411 -41 ct 
414 -40 417 -38 421 -37 ct 425 -36 430 -35 436 -35 ct 440 -35 l  440 -14 l  p ef
488 -145 m  476 -127 l  457 -139 l  455 -137 453 -134 451 -131 ct 449 -129 447 -126 445 -124 ct 
427 -136 l  439 -155 l  458 -143 l  460 -145 462 -148 464 -151 ct 466 -153 468 -156 470 -158 ct 
488 -145 l  p
487 -61 m  487 -53 486 -47 484 -41 ct 482 -35 479 -30 475 -26 ct 471 -22 466 -19 460 -17 ct 
454 -15 448 -14 441 -14 ct 431 -14 l  431 -35 l  435 -35 l  442 -35 449 -36 454 -37 ct 
460 -37 464 -38 468 -40 ct 472 -41 475 -42 476 -44 ct 478 -46 479 -47 479 -49 ct 
479 -51 479 -53 477 -55 ct 476 -57 475 -59 473 -62 ct 472 -64 470 -66 469 -68 ct 
468 -71 467 -73 467 -75 ct 467 -76 468 -78 469 -80 ct 469 -82 470 -83 472 -85 ct 
473 -87 474 -89 476 -91 ct 477 -93 478 -95 479 -97 ct 485 -85 487 -73 487 -61 ct 
p ef
584 -14 m  575 -14 l  568 -14 562 -15 557 -16 ct 553 -17 549 -20 546 -22 ct 
543 -25 541 -29 540 -33 ct 538 -37 537 -42 537 -48 ct 536 -54 535 -62 534 -74 ct 
533 -85 531 -99 529 -117 ct 527 -132 526 -143 525 -151 ct 524 -159 524 -164 524 -165 ct 
524 -170 528 -178 537 -188 ct 548 -59 l  549 -55 549 -52 550 -49 ct 551 -46 553 -43 555 -41 ct 
558 -40 561 -38 565 -37 ct 569 -36 574 -35 580 -35 ct 584 -35 l  584 -14 l  p ef
664 -69 m  664 -70 663 -72 663 -73 ct 662 -74 662 -76 661 -77 ct 660 -78 659 -79 658 -79 ct 
657 -80 656 -81 655 -81 ct 649 -81 644 -77 639 -71 ct 634 -64 629 -55 625 -42 ct 
651 -50 664 -58 664 -69 ct p
668 21 m  668 18 667 15 665 12 ct 663 9 660 6 656 3 ct 652 0 647 -2 641 -5 ct 636 -7 630 -9 624 -11 ct 
626 2 629 12 634 19 ct 638 26 645 29 652 29 ct 654 29 656 29 658 29 ct 660 28 662 28 663 27 ct 
665 26 666 26 667 25 ct 668 23 668 22 668 21 ct p
711 -14 m  707 -14 l  702 -14 698 -14 694 -14 ct 691 -14 687 -13 684 -13 ct 
681 -13 678 -13 675 -12 ct 672 -12 669 -12 665 -11 ct 669 -7 671 -3 673 1 ct 674 5 675 9 675 12 ct 
675 18 675 23 673 28 ct 672 33 670 38 667 41 ct 665 45 662 48 659 50 ct 655 53 652 54 647 54 ct 
638 54 631 47 625 35 ct 622 28 620 21 618 14 ct 616 6 615 -2 615 -11 ct 611 -12 605 -13 599 -13 ct 
593 -14 586 -14 579 -14 ct 575 -14 l  575 -35 l  579 -35 l  582 -35 586 -36 589 -36 ct 
592 -36 595 -36 597 -37 ct 600 -37 603 -38 606 -38 ct 609 -39 613 -40 616 -40 ct 
620 -49 624 -57 628 -65 ct 633 -73 637 -80 642 -86 ct 646 -92 650 -97 654 -101 ct 
658 -105 661 -106 664 -106 ct 670 -106 673 -99 673 -85 ct 673 -72 670 -62 665 -53 ct 
663 -49 660 -46 656 -42 ct 652 -38 648 -34 642 -31 ct 646 -32 650 -32 656 -33 ct 
661 -33 667 -34 672 -34 ct 678 -35 683 -35 689 -35 ct 694 -35 698 -35 702 -35 ct 
711 -35 l  711 -14 l  p ef
866 -190 m  846 -183 827 -177 811 -171 ct 795 -165 780 -160 767 -154 ct 738 -143 723 -135 723 -130 ct 
723 -128 731 -123 747 -115 ct 754 -111 760 -107 765 -103 ct 770 -98 774 -93 778 -88 ct 
785 -77 789 -65 789 -53 ct 789 -46 788 -41 786 -36 ct 784 -31 780 -27 774 -24 ct 
768 -20 760 -18 750 -16 ct 740 -15 727 -14 711 -14 ct 702 -14 l  702 -35 l  706 -35 l 
721 -35 734 -36 744 -37 ct 754 -38 762 -39 767 -41 ct 773 -43 777 -45 779 -47 ct 
781 -49 782 -52 782 -54 ct 782 -57 781 -60 778 -64 ct 776 -68 772 -72 767 -77 ct 
762 -81 757 -85 752 -89 ct 747 -92 743 -95 739 -97 ct 734 -99 729 -101 726 -103 ct 
723 -105 721 -106 720 -108 ct 717 -110 716 -115 716 -123 ct 716 -132 717 -138 720 -142 ct 
720 -142 l  722 -146 732 -152 750 -162 ct 765 -170 783 -178 804 -186 ct 825 -195 849 -203 876 -212 ct 
866 -190 l  p ef
pom
gr
gs
0 0 m 8381 0 l 8381 3301 l 0 3301 l 0 0 l eoclip newpath
gr
gr
0 3302 t 
pom
count op_count sub {pop} repeat countdictstack dict_count sub {end} repeat b4_inc_state restore
%%PageTrailer
%%Trailer
%%EOF
